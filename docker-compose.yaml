version: "3.3"

services:
  db:
    image: postgres
    environment: &secrets
      POSTGRES_PASSWORD: &password secret
      DB_PASSWORD: *password
    volumes:
      - db-data:/var/lib/postgresql/data

  redis:
    image: redis

  adminer:
    image: adminer
    ports:
      - "9998:8080"
    depends_on:
      - db
    environment:
      <<: *secrets
      ADMINER_PLUGINS: dump-json tables-filter

  sekura:
    build: ./sekura
    volumes:
      - ./sekura:/app
    depends_on:
      - db
    environment: &sekurasecrets
      <<: *secrets
      DB_ENGINE: django.db.backends.postgresql
      DB_USER: postgres
      DB_PASSWORD: *password
      DB_HOST: db
      DJANGO_DEBUG: "true"
      ALLOWED_HOSTS: sekura,sekura:8000,localhost:9999,localhost:9996,localhost:9997,localhost
      CSRF_TRUSTED_ORIGINS: http://sekura
      PYTHONDONTWRITEBYTECODE: 1
      CACHE_JSON: |
        {
            "default": {
                "BACKEND": "django.core.cache.backends.redis.RedisCache",
                "LOCATION": [
                    "redis://redis:6379/0"
                ]
            },
            "celery-results": {
                "BACKEND": "django.core.cache.backends.redis.RedisCache",
                "LOCATION": [
                    "redis://redis:6379/2"
                ]
            }
        }
      CELERY_RESULT_BACKEND: "redis://redis:6379/2"
      CELERY_BROKER_URL: "redis://redis:6379/1"
    ports:
      - 9997:8000

  sekura-beat:
    build: ./sekura
    command: ./docker-exec.sh celery -A sekura beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./sekura:/app
    depends_on:
      - redis
    environment:
      <<: *sekurasecrets

  sekura-worker:
    build: ./sekura
    command: ./docker-exec.sh celery -A sekura worker -l INFO
    volumes:
      - ./sekura:/app
    depends_on:
      - redis
    environment:
      <<: *sekurasecrets

  sekura-flower:
    build: ./sekura
    command: ./docker-exec.sh celery flower --port=8000 --url-prefix=/flower
    volumes:
      - ./sekura:/app
    environment:
      <<: *sekurasecrets

  sekura-automate:
    build: ./sekura
    command: ./docker-automate.sh
    volumes:
      - ./sekura:/app
    depends_on:
      - db
    environment:
      <<: *sekurasecrets

  gui:
    build: ./sekura-gui
    #image: node:17-alpine
    working_dir: /app
    command: "npm start"
    volumes:
      - ./sekura-gui:/app
    ports:
      - 9996:9999
    environment:
      PORT: "9999"

  nginx:
    image: nginx
    depends_on:
      - sekura
      - gui
    volumes:
      - ./nginx:/etc/nginx/conf.d/
      - ./sekura/assets:/usr/share/nginx/html/assets
    ports:
      - 9999:80

volumes:
  db-data:
